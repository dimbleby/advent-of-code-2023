[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "advent"
version = "0.1.0"
description = ""
authors = ["David Hotham <david.hotham@microsoft.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.10"
attrs = ">=23.1.0"

[tool.poetry.group.dev.dependencies]
mypy = ">=1.7"
ruff = ">=0.1.6"

[tool.poetry.scripts]
advent = "advent.main:main"

[tool.mypy]
files = "."
enable_error_code = [
  "explicit-override",
  "ignore-without-code",
  "redundant-expr",
  "truthy-bool",
]
strict = true

[tool.ruff]
target-version = "py310"

[tool.ruff.lint]
select = [
  "A",     # flake8-builtins
  "ARG",   # flake8-unused-arguments
  "ASYNC", # flake8-async
  "B",     # flake8-bugbear
  "C4",    # flake8-comprehensions
  "DTZ",   # flake8-datetimez
  "E",     # pycodestyle
  "EM",    # flake8-errmsg
  "EXE",   # flake8-executable
  "F",     # pyflakes
  "FURB",  # refurb
  "I",     # isort
  "ICN",   # flake8-import-conventions
  "ISC",   # flake8-implicit-string-concat
  "N",     # pep8-naming
  "PIE",   # flake8-pie
  "PLC",   # pylint conventions
  "PLE",   # pylint errors
  "PLW",   # pylint warnings
  "PTH",   # flake8-use-pathlib
  "RET",   # flake8-return
  "RSE",   # flake8-raise
  "RUF",   # ruff
  "S",     # flake8-bandit
  "SIM",   # flake8-simplify
  "TCH",   # flake8-type-checking
  "TID",   # flake8-tidy-imports
  "UP",    # pyupgrade
  "W",     # pycodestyle
]
ignore = [
  "E203", # whitespace before ':'
  "S101", # assert-used
]
unfixable = [
  "F841", # unused-variable
]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.flake8-type-checking]
strict = true

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]
